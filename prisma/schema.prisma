// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int             @id @default(autoincrement())
  name        String
  email       String          @unique
  password    String
  role        String
  createdAt   DateTime        @default(now())
  carts       Cart[]
  orders      Order[]
  designs     CustomDesign[]
  accounts    Account[]

  @@map("user")
}

model Account {
  id                  Int      @id @default(autoincrement())
  userId              Int
  type                String
  provider            String
  providerAccountId   String
  refresh_token       String?
  access_token        String?
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String?
  session_state       String?

  user                User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Cart {
  id          Int           @id @default(autoincrement())
  userId      Int
  createdAt   DateTime      @default(now())
  productId   Int?
  designId    Int?

  product     Product?      @relation(fields: [productId], references: [id])
  design      CustomDesign? @relation(fields: [designId], references: [id])
  user        User          @relation(fields: [userId], references: [id])

  @@map("cart")
}

model Order {
  id          Int           @id @default(autoincrement())
  userId      Int
  orderDate   DateTime      @default(now())
  status      String
  total       Decimal
  productId   Int?
  designId    Int?

  product     Product?      @relation(fields: [productId], references: [id])
  design      CustomDesign? @relation(fields: [designId], references: [id])
  user        User          @relation(fields: [userId], references: [id])

  @@map("order")
}

model Product {
  id          Int              @id @default(autoincrement())
  name        String
  description String
  basePrice   Float
  dimensions  String
  withFrame   Boolean
  image       String
  categoryId  Int

  category    Category         @relation(fields: [categoryId], references: [id])
  designs     CustomDesign[]
  carts       Cart[]
  orders      Order[]

  @@map("product")
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    
  products Product[]

  @@map("category")
}

model CustomDesign {
  id           Int       @id @default(autoincrement())
  userId       Int
  productId    Int
  designName   String
  designImage  String
  createdAt    DateTime  @default(now())

  user         User      @relation(fields: [userId], references: [id])
  product      Product   @relation(fields: [productId], references: [id])
  carts        Cart[]
  orders       Order[]

  @@map("customDesign")
}